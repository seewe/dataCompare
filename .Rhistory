add_dockerfile_with_renv(
source_folder = ".",
lockfile = NULL,
output_dir = fs::path(".", "deploy"),
distro = "focal",
from = "rocker/shiny",
as = NULL,
sysreqs = TRUE,
port = 8081,
host = "0.0.0.0",
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
document = TRUE,
extra_sysreqs = NULL,
update_tar_gz = TRUE,
dockerfile_cmd = NULL,
)
dataCompare::run_app()
install.packages("rhub")
rhub::check_for_cran()
devtools::check_rhub()
?rhubv2
devtools::install_deps()
2+2
devtools::install_deps()
devtools::install_deps()
devtools::test()
devtools::run_examples()
library(usethis)
remove.packages("usethis")
devtools::run_examples()
devtools::check()
rhub::check_for_cran()
devtools::check_rhub()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
rhub::rhub_doctor()
gitcreds::gitcreds_set()
rhub::rhub_doctor()
rhub::rhub_check()
rhub::rhub_check()
rhub::rhub_check()
rhub::rhub_check()
devtools::check_rhub()
rhub::rhub_check()
devtools::check_win_devel()
devtools::spell_check()
devtools::spell_check()
install.packages("goodpractice")
goodpractice::gp()
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "data Comparison",
pkg_description = "Application to compare two data frame and provide differences.",
pkg_version = '1.0.0',
author_first_name = 'Sergio',
author_last_name = 'Ewane Ebouele',
author_email = 'info@dataforknow.com',
repo_url = "https://github.com/seewe/dataCompare"
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "data Comparison",
pkg_description = "Application to compare two data frame and provide differences.",
pkg_version = '1.0.0',
authors = person(given = 'seewe',
family = 'Ewane Ebouele',
first = 'Sergio',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "data Comparison",
pkg_description = "Application to compare two data frame and provide differences.",
pkg_version = '1.0.0',
authors = person(family = 'Ewane Ebouele',
first = 'Sergio',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "data Comparison",
pkg_description = "Application to compare two data frame and provide differences.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "data Comparison",
pkg_description = "A shiny app use to compare two data frame and provide more details on differences.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
devtools::check_rhub()
rhub::check_for_cran()
usethis::use_cran_comments()
install.packages("githubinstall")
githubinstall::githubinstall("inteRgrate")
install_github("jumpingrivers/inteRgrate")
devtools::install_github("jumpingrivers/inteRgrate")
devtools::install_github("jumpingrivers/inteRgrate")
devtools::install_github("jumpingrivers/inteRgrate", force = TRUE)
inteRgrate::check_pkg()
library(tinytex)
install_tinytex()
inteRgrate::check_pkg()
inteRgrate::check_pkg()
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:/Users/EWE/AppData/Local/Programs/MiKTeX/miktex/bin/x64",sep=";"))
Sys.getenv("PATH")
inteRgrate::check_pkg()
inteRgrate::check_pkg()
inteRgrate::check_lintr()
inteRgrate::check_lintr()
inteRgrate::check_tidy_description()
usethis::use_tidy_description()
inteRgrate::check_r_filenames()
inteRgrate::check_readme()
add_dockerfile_with_renv(
source_folder = ".",
lockfile = NULL,
output_dir = fs::path(".", "deploy"),
distro = "focal",
from = "rocker/shiny",
as = NULL,
sysreqs = TRUE,
port = 8081,
host = "0.0.0.0",
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
document = TRUE,
extra_sysreqs = NULL,
update_tar_gz = TRUE,
dockerfile_cmd = NULL,
)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
add_dockerfile_with_renv(
source_folder = ".",
lockfile = NULL,
output_dir = fs::path(".", "deploy"),
distro = "focal",
from = "rocker/shiny",
as = NULL,
sysreqs = TRUE,
port = 8081,
host = "0.0.0.0",
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
document = TRUE,
extra_sysreqs = NULL,
update_tar_gz = TRUE,
dockerfile_cmd = NULL,
)
add_dockerfile_with_renv(
source_folder = ".",
lockfile = NULL,
output_dir = fs::path(".", "deploy"),
distro = "focal",
from = "rocker/shiny",
as = NULL,
sysreqs = TRUE,
port = 8081,
host = "0.0.0.0",
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
document = TRUE,
extra_sysreqs = NULL,
update_tar_gz = TRUE,
dockerfile_cmd = NULL,
)
add_dockerfile_with_renv(
source_folder = ".",
lockfile = NULL,
output_dir = fs::path(".", "deploy"),
distro = "focal",
from = "rocker/shiny",
as = NULL,
sysreqs = TRUE,
port = 8081,
host = "0.0.0.0",
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
document = TRUE,
extra_sysreqs = NULL,
update_tar_gz = TRUE,
dockerfile_cmd = NULL,
)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
add_dockerfile_with_renv(
source_folder = ".",
lockfile = NULL,
output_dir = fs::path(".", "deploy"),
distro = "focal",
from = "rocker/shiny",
as = NULL,
sysreqs = TRUE,
port = 8081,
host = "0.0.0.0",
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
document = TRUE,
extra_sysreqs = NULL,
update_tar_gz = TRUE,
dockerfile_cmd = NULL,
)
