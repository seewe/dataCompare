golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
dataCompare::run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
install.packages("explore")
explore::explore(iris)
library(explore)
explore_tbl(iris)
explore_all(iris)
explore_all(mtcars)
explore_all(mtcars[,1])
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
explore::describe_cat(iris)
explore::describe_cat(iris, 1)
explore::describe(iris, 1)
explore::describe(iris)
explore::describe_cat(iris, "Species")
explore::describe_num(iris, v(Sepal.Length, Petal.Length))
explore::describe_num(iris, c(Sepal.Length, Petal.Length))
explore::describe_num(iris, c("Sepal.Length", "Petal.Length"))
explore::describe_num(iris, "Sepal.Length")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
usethis::use_import_from("explore", c("describe"))
usethis::use_import_from("shinycssloaders", c("withSpinner", "showPageSpinner", "hidePageSpinner"))
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
iris_1 <- iris %>% dplyr::mutate(
var_add1 = sample.int(nrow(iris), replace = TRUE),
var_add2 = rnorm(nrow(iris)),
var_add3 = sample(c("cat1", "cat2", "cat3"), nrow(iris), replace = TRUE)
)
iris_1 <- iris_1 %>%
rbind.data.frame(
iris_1 %>% dplyr::sample_n(50)
) %>%
dplyr::mutate(
ID = row_number()
)
iris_2 <- iris %>% dplyr::mutate(
var_more = sample(c("cat1", "cat2", "cat3"), nrow(iris), replace = TRUE),
var_add3 = sample.int(nrow(iris), replace = TRUE)
)
iris_2 <- iris_2  %>% rbind.data.frame(
iris_2 %>% dplyr::sample_n(50)
) %>%
dplyr::mutate(
ID = row_number()
)
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
here::here("Comparison_report.html")
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context.",
report_output_file = here::here("Comparison_report.html")
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = report_output_file,  # paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
}
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
here::here("Comparison_report.html")
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
}
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
print("Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare"))
}
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
cat("----------------------------------------------------------------")
cat("Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare"))
cat("----------------------------------------------------------------")
}
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
cat("----------------------------------------------------------------")
cat("Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare"))
cat("----------------------------------------------------------------")
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
}
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
cat("----------------------------------------------------------------")
cat(paste0("Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare")))
cat("----------------------------------------------------------------")
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
}
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
print("----------------------------------------------------------------")
print(paste0("Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare")))
print("----------------------------------------------------------------")
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
}
compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
print("----------------------------------------------------------------")
print(paste0("Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare")))
print("----------------------------------------------------------------")
}
compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
print(paste0("----------------------------------------------------------------\n",
"Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare"), "\n",
"----------------------------------------------------------------\n")
)
}
compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
compare_data_frame_object_report <- function(df1,
df2,
ids,
report_title = "Comparator report",
report_author = "Author name here",
report_context = "Add a small text here to explain the context."
){
params <- list(df1_input = df1,
df2_input = df2,
id_input = ids,
title_input = report_title,
author_input = report_author,
context_input = report_context)
rmarkdown::render(system.file("app", "www", "Comparison_report.Rmd", package = "dataCompare"),
output_file = paste0("Comparison_report.html"),
params = params,
envir = new.env(parent = globalenv())
)
cat(paste0("----------------------------------------------------------------\n",
"Find your html report here : ", system.file("app", "www", "Comparison_report.html", package = "dataCompare"), "\n",
"----------------------------------------------------------------\n")
)
}
compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
dataCompare::compare_data_frame_object()
dataCompare::run_data_compare_app()
remove.packages("dataCompare")
install.packages("dataCompare")
iris_1 <- iris %>% dplyr::mutate(
var_add1 = sample.int(nrow(iris), replace = TRUE),
var_add2 = rnorm(nrow(iris)),
var_add3 = sample(c("cat1", "cat2", "cat3"), nrow(iris), replace = TRUE)
)
library(dplyr)
iris_1 <- iris %>% dplyr::mutate(
var_add1 = sample.int(nrow(iris), replace = TRUE),
var_add2 = rnorm(nrow(iris)),
var_add3 = sample(c("cat1", "cat2", "cat3"), nrow(iris), replace = TRUE)
)
iris_1 <- iris_1 %>%
rbind.data.frame(
iris_1 %>% dplyr::sample_n(50)
) %>%
dplyr::mutate(
ID = row_number()
)
iris_2 <- iris %>% dplyr::mutate(
var_more = sample(c("cat1", "cat2", "cat3"), nrow(iris), replace = TRUE),
var_add3 = sample.int(nrow(iris), replace = TRUE)
)
iris_2 <- iris_2  %>% rbind.data.frame(
iris_2 %>% dplyr::sample_n(50)
) %>%
dplyr::mutate(
ID = row_number()
)
dataCompare::compare_data_frame_object_report(
df1 = iris_1,
df2 = iris_2,
ids = "ID",
report_title = "Iris data comparison",
report_author = "Sergio Ewane",
report_context = "This report aim to show an example of how to perform a comparison and build an html report."
)
dataCompare::run_data_compare_app()
2+2
