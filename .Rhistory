devtools::submit_cran()
use_github_release()
git_repo()
use_github_release()
2+2
use_github_release()
usethis::use_github_release()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
library(dataCompare)
2+2
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
remove.packages("dataCompare")
install.packages("R:/data4know/dataCompare_1.0.2.tar.gz", repos = NULL, type = "source")
Sys.Date()
Sys.time()
as.numeric(Sys.time())
as.numeric(Sys.time())
as.numeric(Sys.time())
paste0("www/Comparison_report_",as.numeric(Sys.time()),".html")
paste0("www/Comparison_report_",as.numeric(Sys.time()),".html")
paste0("www/Comparison_report_",round(as.numeric(Sys.time())),".html")
paste0("www/Comparison_report_",round(as.numeric(Sys.time())),".html")
paste0("www/Comparison_report_",round(as.numeric(Sys.time())),".html")
paste0("www/Comparison_report_",round(as.numeric(Sys.time())),".html")
paste0("www/Comparison_report_",round(as.numeric(Sys.time())),".html")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Module UI
mod_comp_report_ui <- function(id) {
ns <- NS(id)
tabItem(
tabName = "comp_report",
fluidRow(
column(3,
box(title = "HTML REPORT",
width = 12,
background = "black",
collapsible = TRUE,
br(),
shiny::textInput(ns("report_title"), "Enter the title of the report", placeholder = "Comparator report", value = "title"),
br(),
shiny::textInput(ns("report_author"), "Enter the author name of the report", placeholder = "Enter your name here", value = "author name"),
br(),
shiny::textAreaInput(ns("report_context"), "Enter a text to describe the context", placeholder = "Please enter at least one sentence here !", value = "Context here"),
br(),
shiny::inputPanel(
shiny::actionButton(ns("run_report"), "RUN", icon = icon("play"))
),
br(),
shiny::htmlOutput(ns("downloadUI"))
)
),
column(9,
shiny::htmlOutput(ns("html_report"))
)
)
)
}
# Module Server
mod_comp_report_server <- function(input, output, session, RV = rv) {
ns <- session$ns
# shiny::addResourcePath("www", "../app/www")
# Run the report
observeEvent(input$run_report, {
params <- list(df1_input = RV()$df1,
df2_input = RV()$df2,
id_input = RV()$ids,
title_input = input$report_title,
author_input = input$report_author,
context_input = input$report_context)
rmarkdown::render(system.file("rmd", "Comparison_report.Rmd", package = "dataCompare"), #file.path("www/Comparison_report.Rmd"),
output_file = system.file("rmd", paste0("Comparison_report_",round(as.numeric(Sys.time())),".html"), package = "dataCompare"), #paste0("www/Comparison_report_",round(as.numeric(Sys.time())),".html"),
params = params,
envir = new.env(parent = globalenv())
)
# Print report in shiny
output$html_report <- renderUI({
tags$iframe(seamless="seamless",
src= system.file("rmd", paste0("Comparison_report_",round(as.numeric(Sys.time())),".html"), package = "dataCompare"), #"www/Comparison_report.html",
width = "80%",
height = 800,
frameborder = "no"
)
})
# print download button
output$downloadUI <- renderUI({
shiny::inputPanel(
shiny::downloadButton(ns("download_report"), "SAVE", icon = icon("save"))
)
})
})
# download the report
output$download_report <- shiny::downloadHandler(
filename <- paste0("Comparison_report.html"),
content = function(file) {
tempReport <- file.path("Comparison_report.Rmd")
file.copy(from = system.file("rmd", "Comparison_report.Rmd", package = "dataCompare"), to = tempReport, overwrite = TRUE) #"www/Comparison_report.Rmd"
params <- list(df1_input = RV()$df1,
df2_input = RV()$df2,
id_input = RV()$ids,
title_input = input$report_title,
author_input = input$report_author,
context_input = input$report_context)
rmarkdown::render(tempReport,
output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
}
)
}
## copy to body.R
# mod_comp_report_ui("comp_report_ui_1")
## copy to app_server.R
# callModule(mod_comp_report_server, "comp_report_ui_1")
## copy to sidebar.R
# menuItem("displayName",tabName = "comp_report",icon = icon("user"))
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
system.file("rmd", "Comparison_report.html", package = "dataCompare")
system.file("rmd", "Comparison_report.html", package = "dataCompare")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
system.file("rmd", package = "dataCompare")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
usethis::use_cran_badge()
usethis::use_lifecycle_badge(stage)
usethis::use_lifecycle_badge(stage = "stable")
usethis::use_lifecycle_badge(stage = "stable")
use_binder_badge(ref = git_default_branch(), urlpath = NULL)
usethis::use_lifecycle_badge(stage = "stable")
usethis::use_github_actions_badge()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
Sys.time()
Sys.time()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
round(as.numeric(Sys.time()))
round(as.numeric(Sys.Date()))
round(as.numeric(Sys.Date()))
round(as.numeric(Sys.Date()))
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
system.file("app", "www", paste0("Comparison_report_",round(as.numeric(Sys.Date())),".html"), package = "dataCompare")
paste0("Comparison_report_",round(as.numeric(Sys.Date())),".html")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
system.file("app", "www", paste0("Comparison_report_",round(as.numeric(Sys.Date())),".html"), package = "dataCompare")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
system.file("app", "www", package = "dataCompare")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
dataCompare::run_data_compare_app()
