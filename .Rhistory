pkg_description = "A shiny app use to compare two data frame and provide more details on differences.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "Data compare",
pkg_description = "'dataCompare' is a 'shiny' app, developed with the 'Golem' framework.
It is used to check values differencies between two data.frames.
The user provides two data.frames to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison:
- comparedf() from 'arsenal' package which compares data.frames as describe [here](https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html).
- skim() from 'skimr' package which provides several insight on data as describe [here](https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html).",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison:
- 'comparedf()' from 'arsenal' package which compares 'data.frames' as describe [here](https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html).
- 'skim()' from 'skimr' package which provides several insight on data as describe [here](https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html).",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison:
- 'comparedf()' from 'arsenal' package which compares 'data.frames' as describe [here](https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html).
- 'skim()' from 'skimr' package which provides several insight on data as describe [here](https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html).",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison.
- 'comparedf()' from 'arsenal' package which compares 'data.frames' as describe here : <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>.
- 'skim()' from 'skimr' package which provides several insight on data as describe here : <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison \:
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison /:
- 'comparedf()' from 'arsenal' package which compares 'data.frames' as describe here : <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>.
- 'skim()' from 'skimr' package which provides several insight on data as describe here : <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison. The most important are
- 'comparedf()' from 'arsenal' package which compares 'data.frames' as describe here <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>.
- 'skim()' from 'skimr' package which provides several insight on data as describe here <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison. The most important are
- 'comparedf()' from 'arsenal' package which compares 'data.frames' as describe [here](https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html)
- 'skim()' from 'skimr' package which provides several insight on data as describe [here](https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html)"  ,
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' app, developed with the 'Golem' framework.
It provides a graphical tool to check values differencies between two 'data.frames'.
The user provides two 'data.frames' to compare as input, selects the
ID variables which identify each row of the input data then clicks
on a button to perform the comparison.
The backend of the app used several 'R' packages functions to
describes data and performs the comparison. The most important are
'comparedf()' from 'arsenal' package and 'skim()' from 'skimr' package.
See more description on 'comparedf()' from 'arsenal' package here <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>
See more description on 'skim()' from 'skimr' package here <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>"  ,
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "'shiny' app to compare two 'data.frames'",
pkg_description = "The 'dataCompare' package is a 'shiny' application developed with the 'Golem' framework.
It provides a graphical tool for checking value differences between two 'data.frames'.
The user provides two 'data.frames' for comparison, selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several 'R' package functions are used to describe the data
and perform the comparison in the backend of the application. The main ones are 'comparedf()' from 'arsenal'
and 'skim()' from 'skimr'.
See the description of 'comparedf()' from the 'arsenal' package here <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>
and that of 'skim()' from the 'skimr' package here <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>."  ,
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "A 'shiny' app to compare two data frames",
pkg_description = "The 'dataCompare' package is a 'shiny' application developed with the 'Golem' framework.
It provides a graphical tool for checking value differences between two data frames.
The user provides two data frames for comparison, selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several 'R' package functions are used to describe the data
and perform the comparison in the backend of the application. The main ones are 'comparedf()' from 'arsenal'
and 'skim()' from 'skimr'.
See the description of 'comparedf()' from the 'arsenal' package here <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>
and that of 'skim()' from the 'skimr' package here <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>."  ,
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
run_data_compare_app()
?br
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
run_data_compare_app()
run_data_compare_app()
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
pkgload::dev_help('skim_num')
class(iris)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "A 'shiny' App To Compare Two Data Frames",
pkg_description = "The 'dataCompare' package is a 'shiny' application developed with the 'Golem' framework.
It provides a graphical tool for checking value differences between two data frames.
The user provides two data frames for comparison, selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several 'R' package functions are used to describe the data
and perform the comparison in the backend of the application. The main ones are 'comparedf()' from 'arsenal'
and 'skim()' from 'skimr'.
See the description of 'comparedf()' from the 'arsenal' package here <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>
and that of 'skim()' from the 'skimr' package here <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "A 'shiny' App To Compare Two Data Frames",
pkg_description = "The 'dataCompare' package is a 'shiny' application developed with the 'Golem' framework.
It provides a graphical tool for checking value differences between two data frames.
The user provides two data frames for comparison, selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several 'R' package functions are used to describe the data
and perform the comparison in the server of the application. The main ones are 'comparedf()' from 'arsenal'
and 'skim()' from 'skimr'.
See the description of 'comparedf()' from the 'arsenal' package here <https://cran.r-project.org/web/packages/arsenal/vignettes/comparedf.html>
and that of 'skim()' from the 'skimr' package here <https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html>.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "A 'shiny' App To Compare Two Data Frames",
pkg_description = "The 'dataCompare' package is a 'shiny' application developed with the 'Golem' framework.
It provides a graphical tool for checking value differences between two data frames.
The user provides two data frames for comparison, selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several 'R' package functions are used to describe the data
and perform the comparison in the server of the application. The main ones are 'comparedf()' from 'arsenal'
and 'skim()' from 'skimr'.
See the description of 'comparedf()' from the 'arsenal' package and that of 'skim()' from the 'skimr' package.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
devtools::install_github("JohnCoene/bsutils")
bsutils::gallery()
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "A 'shiny' App to Compare Two Data Frames",
pkg_description = "The 'dataCompare' package is a 'shiny' application developed with the 'Golem' framework.
It provides a graphical tool for checking value differences between two data frames.
The user provides two data frames for comparison, selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several 'R' package functions are used to describe the data
and perform the comparison in the server of the application. The main ones are 'comparedf()' from 'arsenal'
and 'skim()' from 'skimr'.
See the description of 'comparedf()' from the 'arsenal' package and that of 'skim()' from the 'skimr' package.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
pkgload::dev_help('dataCompare-package')
run_data_compare_app()
detach("package:dataCompare", unload = TRUE)
library(dataCompare)
devtools::build_rmd("vignettes/dataCompare.Rmd")
devtools::build_rmd("vignettes/dataCompare.Rmd")
library(dataCompare)
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
library(dataCompare)
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
usethis::use_import_from("bslib", c("popover"))
usethis::use_import_from("bsicons", c("bsicon"))
usethis::use_import_from("bsicons", c("bs_icon"))
2+2
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
usethis::use_import_from("bslib", c("popover", "tooltip"))
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
library(shiny)
library(shinyBS)
install.packages("shinyBS")
library(shiny)
library(shinyBS)
shinyApp(
ui =
fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30),
bsTooltip("bins", "The wait times will be broken into this many equally spaced bins",
"right", options = list(container = "body"))
),
mainPanel(
plotOutput("distPlot")
)
)
),
server =
function(input, output, session) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
addPopover(session, "distPlot", "Data", content = paste0("
Waiting time between ",
"eruptions and the duration of the eruption for the Old Faithful geyser ",
"in Yellowstone National Park, Wyoming, USA.
Azzalini, A. and ",
"Bowman, A. W. (1990). A look at some data on the Old Faithful geyser. ",
"Applied Statistics 39, 357-365.
"), trigger = 'click')
}
)
usethis::use_import_from("shinyBS", c("bsPopover", "addPopover"))
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
usethis::use_import_from("vroom", c("spec"))
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list = ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_data_compare_app()
devtools::load_all(".")
2+2
golem::fill_desc(
pkg_name = "dataCompare",
pkg_title = "A 'shiny' App to Compare Two Data Frames",
pkg_description = "A tool developed with the 'Golem' framework which provides
an easier way to check cells differences between two data
frames. The user provides two data frames for comparison,
selects IDs variables identifying each row of input data,
then clicks a button to perform the comparison. Several
'R' package functions are used to describe the data
and perform the comparison in the server of the
application. The main ones are comparedf() from 'arsenal'
and skim() from 'skimr'. For more details see the
description of comparedf() from the 'arsenal' package and
that of skim() from the 'skimr' package.",
pkg_version = '1.0.0',
authors = person(given = 'Sergio',
family = 'Ewane Ebouele',
email = 'info@dataforknow.com',
role = c("aut", "cre") ),
repo_url = "https://github.com/seewe/dataCompare",
)
build_vignettes()
